<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="MAIN" Id="{fd460483-4c15-45e9-a130-c38eb726d511}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR_INPUT
	// ===================模块动作信号(按动作先后排列)==========
	Power_Execute 		: BOOL;							// 上电使能控制信号
	Axis_Power			: ARRAY[1..18] OF BOOL;			// 单电机使能
	Robot_Power			: BOOL;							// 机器人所有电机使能
	
	Home_Execute		: BOOL;							// 设置零点程序使能
	//Axis_Start_Back 	: ARRAY[1..18] OF BOOL;			// 单电机找零回退信号
	//Robot_Start_Back	: BOOL;							// 机器人所有电机回退信号
	Leg_Home_Set		: ARRAY[1..6] OF BOOL;	
	Axis_Home_Set		: ARRAY[1..18] OF BOOL;			// 单电机设定零点信号
	Robot_Home_Set		: BOOL;							// 机器人所有电机设定零点信号
	//Home_Set_Position	: ARRAY[1..18] OF LREAL;		// 找到零点后电机到达的位置
	//Delay_On			: ARRAY[1..18] OF BOOL;
	//TON1				: TON;
	
	Move_Execute		: BOOL;							// 绝对运动使能信号
	Robot_Stand_Execute	: BOOL;							// 机器人站立程序使能	
	Axis_Absolute_Eable	: ARRAY[1..18] OF BOOL;			// 单电机绝对运动使能信号
	Robot_Absolute_Eable: ARRAY[1..18] OF BOOL;			// 机器人站立使能信号
	Axis_Move_Position	: ARRAY[1..18] OF LREAL;		// 电机绝对运动位置			
	
	Reset_Execute		: BOOL;							// 电机驱动重置动作发生使能
	Axis_Reset			: ARRAY[1..18] OF BOOL;			// 单电机驱动重置信号使能
	Robot_Reset			: BOOL;							// 机器人整体电机驱动重置
	//Axis_ResetDone		: ARRAY[1..18] OF BOOL;			// 单电机驱动重置完成

END_VAR
VAR
// =======================NC轴变量==========================
	//Leg_Robot			: ARRAY[1..6] OF Hexapod_Leg;	// 定义六足的腿
	Axis_Robot			: ARRAY[1..18] OF Axis;			// 定义六足轴参量(可以调整数据上限来调整电机数目)
	Axis_Delay			: Delay;						// 延迟程序
	Leg_Number			: INT;							// 定义机器人腿数
	Axis_Number 		: INT;							// 定义轴数目
	
	// ===================状态监测变量=======================
	Power_Status	: ARRAY[1..18] OF BOOL;				// 上电监测信号
	Leg_Home_Done	: ARRAY[1..6] OF BOOL;
	Home_Done		: ARRAY[1..18] OF BOOL;				// 找零监测信号
	MoveAbsoluteDone: ARRAY[1..18] OF BOOL;				// 电机运动监测信号
	
	Robot_Error		: BOOL;								// 机器人电机错误信号
	Axis_Error		: ARRAY[1..18] OF BOOL;				// 电机错误监测信号
	Axis_ErrorID	: ARRAY[1..18] OF UDINT;			// 电机错误号码监测信号
	
	Axis_ActPostion	: ARRAY[1..18] OF LREAL;			// 电机轴实际位置
	
	// =======================模块中间变量======================
	//HomeDone_Number	: LREAL :=0;					//完成找零的轴数
	//ExSetPoint_Position	: ARRAY[1..18] OF LREAL;		// 外部信号位置
	//t					: LREAL :=0;
	
	// =======================驱动器信号监测====================
	Current_Turque_Value  AT%IW0 : ARRAY[1..18] OF INT ;//电流、力矩相关值
	Current_Before_Mapping	: ARRAY[1..18] OF LREAL ;	// 将Current_Turque_Value转换数制
	Max_Turque_Value 		: INT ;						// 设置最大力矩边界值
	Mapping_Current			: Variable_Control_Mapping_Model;	// 变量映射	
	Current_After_Mapping	: ARRAY[1..18] OF LREAL;	// 映射后的原始电流值
	
	// ====================Simulink模块相关=====================  
  //Filter_Current  : FB_Filter_Current_Hexapod_Robot(oid:=16#01010030);
  //Current_Turque_Filter  : ARRAY[1..18] OF LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// =======================子程序使能(永久运行)===================
Variable_Monitor();			// 变量监测子程序使能
Logic_Control();			// 逻辑控制子程序使能
Variable_Set();				// 各动作速度子程序使能
Leg_Action();				// 单腿运动子程序使能
Robot_Action();				// 机器人整体运动子程序使能

// =====================电机驱动重置=============================
IF Reset_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Reset(Drive_Reset:= Axis_Reset[Axis_Number]);
	END_FOR
END_IF

// =======================电机上电===============================
IF Power_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Power(Axis_Enable:= Axis_Power[Axis_Number]);
	END_FOR
END_IF

// =======================找零程序===============================
IF Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Home(Drive_Home:= Axis_Home_Set[Axis_Number]);
	END_FOR
END_IF

// =======================站立程序===============================
IF Move_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Move_Absolute(	Drive_Move_Absolute:= Axis_Absolute_Eable[Axis_Number], 
												Absolute_Position:= Axis_Move_Position[Axis_Number]);
	END_FOR
END_IF
]]></ST>
    </Implementation>
    <Action Name="Leg_Action" Id="{4c1abdbd-87a5-4a2a-b095-1d68b1c20f72}">
      <Implementation>
        <ST><![CDATA[// ===================机器人单条腿找零程序====================
IF Home_Execute THEN
	FOR Leg_Number := 1 TO 6 {BY 1} DO
		IF Leg_Home_Set[Leg_Number] THEN		// 在可视化中，Leg_Home_Set为点动
			Axis_Home_Set[1+(Leg_Number-1)*3] := Leg_Home_Set[Leg_Number];
			Axis_Home_Set[2+(Leg_Number-1)*3] := Leg_Home_Set[Leg_Number];
			Axis_Home_Set[3+(Leg_Number-1)*3] := Leg_Home_Set[Leg_Number];
		ELSIF Home_Done[1+(Leg_Number-1)*3] AND Home_Done[2+(Leg_Number-1)*3] AND Home_Done[3+(Leg_Number-1)*3] THEN
			Leg_Home_Set[Leg_Number] := FALSE; 
		END_IF
	END_FOR
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="Logic_Control" Id="{c215c7dc-fc9f-4378-b645-9582d910ac24}">
      <Implementation>
        <ST><![CDATA[// =======================控制逻辑区==========================
// 保证所有的动作拥有合理的先后顺序，优化控制逻辑
// 也防止出现两个或两个以上动作同时进行的情况，保证控制安全

// ===================电机驱动重置逻辑========================
//FOR Axis_Number := 1 TO 18 {BY 1} DO
IF Axis_Error[1] OR Axis_Error[2] OR Axis_Error[3] OR Axis_Error[4] OR Axis_Error[5] OR Axis_Error[6]
	 OR Axis_Error[7] OR Axis_Error[8] OR Axis_Error[9] OR Axis_Error[10] OR Axis_Error[11] OR Axis_Error[12]
		OR Axis_Error[13] OR Axis_Error[14] OR Axis_Error[15] OR Axis_Error[16] OR Axis_Error[17] OR Axis_Error[18]
THEN
	Robot_Error := TRUE;
ELSE
	Robot_Error := FALSE;
END_IF
//END_FOR

IF Robot_Error THEN
	Reset_Execute := TRUE;
ELSIF NOT Robot_Error THEN
	Reset_Execute := FALSE;
ELSIF NOT Reset_Execute THEN
	Axis_Reset[Axis_Number] := FALSE;
	Axis_Robot[Axis_Number].Reset(Drive_Reset:= Axis_Reset[Axis_Number]);
END_IF

// =====================上电程序逻辑==========================
IF NOT Power_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Power[Axis_Number] := FALSE;
		Axis_Robot[Axis_Number].Power(Axis_Enable:= Axis_Power[Axis_Number]);
	END_FOR
END_IF

// =====================找零程序逻辑==========================
IF Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		IF Home_Done[Axis_Number] THEN			// 	丝杠到达零点位置后，单电机标零使能位关闭			
			Axis_Home_Set[Axis_Number] :=0;	
			Axis_Robot[Axis_Number].Home(Drive_Home:= Axis_Home_Set[Axis_Number]);
		END_IF
	END_FOR
	Move_Execute :=0;							// 设定零点时，不能进行其他运动
	//ExSetPoint_Execute :=0;
ELSIF NOT Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		//Axis_Start_Back[Axis_Number] :=0;
		Axis_Home_Set[Axis_Number] := 0;
	END_FOR
END_IF

// =====================机器人站立逻辑==========================
IF Move_Execute THEN
	//Absolute_Eable := TRUE;
	Home_Execute := FALSE;						// 站立运动使能时，机器人调零必须结束
	//ExSetPoint_Execute :=0;						// 站立运动时，不能进行其他运动
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		IF MoveAbsoluteDone[Axis_Number] THEN	// 	丝杠到达设定位置后，单电机绝对运动使能位关闭
			Axis_Absolute_Eable[Axis_Number] := FALSE;
		END_IF
	END_FOR
ELSIF NOT Move_Execute THEN						// 站立运动不使能,轴不能运动
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Absolute_Eable[Axis_Number] := FALSE;
		Axis_Robot[Axis_Number].Move_Absolute(	Drive_Move_Absolute:= Axis_Absolute_Eable[Axis_Number], 
												Absolute_Position:= Axis_Move_Position[Axis_Number]);
	END_FOR
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="Robot_Action" Id="{103d6b73-9e52-4067-a668-c66b63a8003e}">
      <Implementation>
        <ST><![CDATA[// =================机器人整体运动命令区======================
// 六足所有电机整体控制

// ====================机器人驱动重置=========================
IF Robot_Reset THEN
	IF Reset_Execute THEN
		Axis_Reset[Axis_Number] := TRUE;
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Robot[Axis_Number].Reset(Drive_Reset:= Axis_Reset[Axis_Number]);
		END_FOR
	END_IF
END_IF	

// ===================机器人所有电机上电======================
IF Robot_Power THEN	
	IF Power_Execute THEN
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Power[Axis_Number] := TRUE ;
		END_FOR
	END_IF
END_IF
	
// ===================机器人找零程序=======================
IF Robot_Home_Set THEN				// 标零程序
	//Robot_Start_Back := FALSE;
	IF Home_Execute THEN
		Leg_Home_Set[3] := Leg_Home_Set[5] := Leg_Home_Set[1];	// 在整机调零时，1\3\5三条腿同时调零；
		Leg_Home_Set[4] := Leg_Home_Set[6] := Leg_Home_Set[2];	// 在整机调零时，2\4\6三条腿同时调零；
	ELSIF NOT Home_Execute THEN
		FOR Leg_Number := 1 TO 6 {BY 1} DO
			Leg_Home_Set[Leg_Number] := FALSE;
		END_FOR
	END_IF
ELSIF NOT Robot_Home_Set AND NOT Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Home_Set[Axis_Number] := FALSE;
	END_FOR
END_IF

// =====================站立程序===============================
IF Robot_Stand_Execute THEN
	IF Move_Execute THEN
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			IF MoveAbsoluteDone[Axis_Number] THEN		// 	丝杠到达设定位置后，单电机绝对运动使能位关闭
				Axis_Absolute_Eable[Axis_Number] := FALSE;
			ELSE
				Axis_Absolute_Eable[Axis_Number] := TRUE;
			END_IF
		END_FOR
	END_IF
ELSIF NOT Robot_Stand_Execute AND NOT Move_Execute THEN 
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Absolute_Eable[Axis_Number] := FALSE;
	END_FOR
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="Variable_Monitor" Id="{ba544c5b-3975-4680-8681-575f377c08d2}">
      <Implementation>
        <ST><![CDATA[// =====================关键数据信号监测======================

// ==============最大力矩设置区(边界控制条件)=================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Robot[Axis_Number].Max_Turque_Value := Max_Turque_Value;
END_FOR

// =======================力矩检测区==========================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Robot[Axis_Number].Current_Turque_Value := Current_Turque_Value[Axis_Number];
	Current_Before_Mapping[Axis_Number] := INT_TO_LREAL(Current_Turque_Value[Axis_Number]);
END_FOR
Mapping_Current(Controller_Leg_Variable:= Current_Before_Mapping, Model_Leg_Variable=> Current_After_Mapping);

// ====================轴实际位置检测区=======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_ActPostion[Axis_Number] := Axis_Robot[Axis_Number].ActPosition;
END_FOR

// =======================上电状态检测区======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Power_Status[Axis_Number] := Axis_Robot[Axis_Number].State_PowerStatus;
END_FOR

// =======================找零状态检测区======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Home_Done[Axis_Number] := Axis_Robot[Axis_Number].State_HomeDone;
END_FOR

(*FOR Leg_Number := 1 TO 6 {BY 1} DO
	Leg_Home_Done[Leg_Number] := Leg_Robot[Axis_Number].State_HomeDone;
END_FOR*)

// ===================电机绝对运动状态检测区==================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	MoveAbsoluteDone[Axis_Number] := Axis_Robot[Axis_Number].State_MoveAbsoluteDone;
END_FOR

// =======================电机错误检测区======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Error[Axis_Number] := Axis_Robot[Axis_Number].Axis_Error;
	Axis_ErrorID[Axis_Number] := Axis_Robot[Axis_Number].Axis_ErrorID;
END_FOR
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Variable_Set" Id="{bb26148f-2045-404a-a802-a94df446518b}">
      <Implementation>
        <ST><![CDATA[// =======================速度规定区==========================
FOR Axis_Number := 1 TO 18 {BY 1} DO						//此时每一个电机的速度都是一样的
	Axis_Robot[Axis_Number].Home_Velocity 	:= 20;			//找零速度(Axis_Jog中的速度)
	Axis_Robot[Axis_Number].Move_Relative_Velocity	:=30;	//相对运动速度
END_FOR
IF Home_Execute THEN
	//IF Robot_Home_Set THEN
		Axis_Robot[1].Move_Absolute_Velocity :=17; Axis_Robot[3].Move_Absolute_Velocity :=17; Axis_Robot[4].Move_Absolute_Velocity :=16.74;
		Axis_Robot[6].Move_Absolute_Velocity :=16.74; Axis_Robot[7].Move_Absolute_Velocity :=17.3; Axis_Robot[9].Move_Absolute_Velocity :=17.3;
		Axis_Robot[10].Move_Absolute_Velocity :=16.95; Axis_Robot[12].Move_Absolute_Velocity :=16.95; Axis_Robot[13].Move_Absolute_Velocity :=17;
		Axis_Robot[15].Move_Absolute_Velocity :=17; Axis_Robot[16].Move_Absolute_Velocity :=17; Axis_Robot[18].Move_Absolute_Velocity :=17;
		Axis_Robot[2].Move_Absolute_Velocity :=20; Axis_Robot[5].Move_Absolute_Velocity :=19.8; Axis_Robot[8].Move_Absolute_Velocity :=20;
		Axis_Robot[11].Move_Absolute_Velocity :=20; Axis_Robot[14].Move_Absolute_Velocity :=20; Axis_Robot[17].Move_Absolute_Velocity :=20;
	//ELSIF NOT Robot_Home_Set THEN
		//FOR Axis_Number := 1 TO 18 {BY 1} DO
			//Axis_Robot[Axis_Number].Move_Absolute_Velocity	:=10;
		//END_FOR
	//END_IF
ELSE
	FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Robot[Axis_Number].Move_Absolute_Velocity	:=10;
	END_FOR
END_IF
	

// =======================位置规定区==========================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Move_Position[Axis_Number] := 160;
END_FOR

// =====================最大力矩规定区========================
Max_Turque_Value := 1000;

// ============电机设置零点后到达位置规定区(链接到Motor_Position_Generator)================
IF Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Home_Absolute_Position := Simulink_Model_Generator.Mapping_Position.Controller_Leg_Variable[Axis_Number];
	END_FOR
END_IF

// ===================程序与模型的变量链接===================
//FOR Axis_Number := 1 TO 18 {BY 1} DO
//	Simulink_Model_Generator.Filter_Current.stInput.Current_Motor[Axis_Number-1] := Current_Turque_Value[Axis_Number];
//END_FOR	
//Simulink_Model_Generator.Current_Turque_Filter := Simulink_Model_Generator.Filter_Current.stOutput.Current_Monitor;]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="MAIN">
      <LineId Id="3" Count="2" />
      <LineId Id="107" Count="0" />
      <LineId Id="7" Count="29" />
      <LineId Id="47" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Leg_Action">
      <LineId Id="12" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="4" Count="7" />
      <LineId Id="3" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Logic_Control">
      <LineId Id="2" Count="39" />
      <LineId Id="54" Count="25" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Robot_Action">
      <LineId Id="2" Count="21" />
      <LineId Id="31" Count="2" />
      <LineId Id="90" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="86" Count="2" />
      <LineId Id="85" Count="0" />
      <LineId Id="55" Count="21" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Variable_Monitor">
      <LineId Id="2" Count="8" />
      <LineId Id="45" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="46" Count="0" />
      <LineId Id="13" Count="29" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Variable_Set">
      <LineId Id="2" Count="1" />
      <LineId Id="5" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="70" Count="4" />
      <LineId Id="59" Count="3" />
      <LineId Id="53" Count="0" />
      <LineId Id="63" Count="3" />
      <LineId Id="45" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="7" Count="9" />
      <LineId Id="86" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="104" Count="1" />
      <LineId Id="103" Count="0" />
      <LineId Id="81" Count="1" />
      <LineId Id="97" Count="2" />
      <LineId Id="89" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>